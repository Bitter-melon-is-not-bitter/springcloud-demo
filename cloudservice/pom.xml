<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.com.com.tang</groupId>
    <artifactId>cloudservice</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>cloudservice-api</module>
        <module>cloudservice-provider-dept-8001</module>
        <module>cloudservice-consumer-dept-80</module>
        <module>cloudservice-Eureka-7001</module>
        <module>cloudservice-Eureka-7002</module>
        <module>cloudservice-Eureka-7003</module>
        <module>cloudservice-provider-dept-8002</module>
        <module>cloudservice-provider-dept-8003</module>
        <module>cloudservice-consumer-dept-feign</module>
        <module>cloudservice-provider-dept-hystrix-8001</module>
        <module>cloudservice-consumer-hystrix-dashboard</module>
        <module>cloudservice-zuul-gateway-9527</module>
        <module>cloudservice-config-3344</module>
        <module>cloudservice-config-client-3355</module>
        <module>cloudservice-config-Eureka-client-7001</module>
        <module>cloudservice-provider-config-dept-8001</module>
    </modules>
    <properties>
        <project.bulid.sourceEncoding>UTF-8</project.bulid.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <lombok.version>1.16.18</lombok.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.9.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.0.4</version>
            </dependency>
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.31</version>
            </dependency>
            <!--mybatis和boot的整合-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.0</version>
                <exclusions>
                    <exclusion>
                        <artifactId>logback-core</artifactId>
                        <groupId>ch.qos.logback</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--logback日志-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.3</version>
            </dependency>
            <!--junit-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <!--log4j-->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--构建-->
    <build>
        <!--工程名字-->
        <finalName>cloudservice</finalName>
        <!--资源-->
        <resources>
            <resource>
                <!--在idea想要yml能使用占位符就加上<include>里面的配置-->
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
                <!--允许访问所有工程下的src/main/resources下的内容-->
                <directory>src/main/resources</directory>
                <!--过滤开启-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--maven插件-->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!--这个插件负责解析和解读的-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--<version>2.4.3</version>-->
                <configuration>
                    <!--<encoding>utf-8</encoding>-->
                    <!--使用默认的占位符 其他IDE不知道 反正在idea中设置这个属性后有很多配置文件里面的占位符或者是一些配置文件不生效-->
                    <!--<useDefaultDelimiters>true</useDefaultDelimiters>-->
                    <!--自定义占位符：以$开头和以$结尾的在src/main/resources路径下的配置文件信息就能够读取 自定义也是 不知道是我占位符格式定义错误还是怎么滴 就是不生效-->
                    <!--<delimiters>-->
                    <!--<delimiter>$</delimiter>-->
                    <!--</delimiters>-->
                </configuration>
            </plugin>
            <!-- Java Document Generate -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <!--<aggregate>true</aggregate>-->
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <doclint>none</doclint>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>